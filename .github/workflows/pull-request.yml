name: "Pull Request"

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-nx:
    name: "Run test targets managed by NX"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: "Set up pnpm"
        uses: pnpm/action-setup@v4

      - name: "Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: "Install dependencies"
        run: pnpm install

      - name: "Run NX tests"
        run: pnpm nx affected --target=test --parallel --max-parallel=4 --base=origin/main --head=HEAD --verbose

  build-nx:
    name: "Run build targets managed by NX"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: "Set up pnpm"
        uses: pnpm/action-setup@v4

      - name: "Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: "Install dependencies"
        run: pnpm install

      - name: "Run NX builds"
        run: pnpm nx affected --target=build --parallel --max-parallel=4 --base=origin/main --head=HEAD

  lint:
    name: "Lint check"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: "Set up pnpm"
        uses: pnpm/action-setup@v4
      - name: "Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: "Get PNPM store directory"
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: "Setup PNPM cache"
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: "Install dependencies"
        run: pnpm install

      - name: "Lint check"
        run: pnpm -w lint:check

  format:
    name: Format check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: false

      - name: Get PNPM store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup PNPM cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Format check
        run: pnpm -w format:check

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: false

      - name: Get PNPM store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup PNPM cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Typecheck
        run: pnpm -w typecheck

  check-translations:
    name: Check Translations
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: false

      - name: Get PNPM store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup PNPM cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Check Translations
        run: pnpm -w check:translations
